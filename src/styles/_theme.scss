@use '~@angular/material' as mat;
@use 'sass:map';

$fb-base-gap-width: .25rem;
$primary-text: rgba(0, 0, 0, .87);
$secondary-text: rgba(0, 0, 0, .6);
$icon-text: rgba(0, 0, 0, .54);
$note-text: rgba(0, 0, 0, .38);

$primary-color: (
  50: #f6fcf9,
  100: #6af3fd,
  200: #50f2fd,
  300: #32edfa,
  400: #25dce9,
  500: #1dc8d4,
  600: #16b6c0,
  700: #009ca6,
  800: #008891,
  900: #007279,
  A100: #6af3fd,
  A200: #50f2fd,
  A400: #25dce9,
  A700: #009ca6,
  contrast: (
    50: rgba(black, .87),
    100: rgba(black, .87),
    200: rgba(black, .87),
    300: rgba(black, .87),
    400: rgba(black, .87),
    500: rgba(black, .87),
    600: white,
    700: white,
    800: white,
    900: white,
    A100: rgba(black, .87),
    A200: white,
    A400: white,
    A700: white,
  )
);

$accent-color: (
  50: #fff,
  100: #f8f8f8,
  200: #dedede,
  300: #c3c3c3,
  400: #aaa,
  500: #8b8b8b,
  600: #717171,
  700: #575757,
  800: #3d3d3d,
  900: #303030,
  A100: #f7f7f7,
  A200: #dedede,
  A400: #aaa,
  A700: #575757,
  contrast: (
    50: rgba(black, .87),
    100: rgba(black, .87),
    200: rgba(black, .87),
    300: rgba(black, .87),
    400: rgba(black, .87),
    500: rgba(black, .87),
    600: white,
    700: white,
    800: white,
    900: white,
    A100: rgba(black, .87),
    A200: white,
    A400: white,
    A700: white,
  )
);

$fb-background-color: (
  bg-primary: #dff4f5,
  bg-light: mat.get-color-from-palette($primary-color, 50),
  bg-light-grey: #f5f5f5,
  bg-grey-100: mat.get-color-from-palette($accent-color, 100),
  bg-grey-200: mat.get-color-from-palette($accent-color, 200),
  bg-grey-300: mat.get-color-from-palette($accent-color, 300),
  bg-grey-400: mat.get-color-from-palette($accent-color, 400),
  bg-grey-500: mat.get-color-from-palette($accent-color, 500),
);

$fb-chart-color: (
  c-red: #ea4335,
  c-green: #34a853,
  c-yellow: #ffb800,
  c-light-green: #2ed47a,
  c-purple-red: #ad1457,
  c-blue: #4688f1,
);

$fb-interactive-color: (
  primary: mat.get-color-from-palette($primary-color, 700),
  primary-hover: mat.get-color-from-palette($primary-color, 800),
  primary-pressed: mat.get-color-from-palette($primary-color, 900),
  white: mat.get-color-from-palette($accent-color, 50),
  link: #1a73e8,
);

$fb-icon-color: (
  b1: #659cf8,
  b2: #11b8f6,
  b3: #4db8c8,
  b4: #009ca6,
  g1: #27b374,
  g2: #67b860,
  g3: #55cb99,
  g4: #97d17d,
  y1: #ffd12d,
  y2: #ffaa43,
  y3: #b0745f,
  y4: #f48759,
  r1: #f3738a,
  r2: #f591b3,
  r3: #f5635b,
  r4: #dc5959,
  p1: #fa65b2,
  p2: #bb80ea,
  p3: #887ef9,
  p4: #9272b4,
);

$fb-border-radius-map: (
  4: .25rem,
  8: .5rem,
  12: .75rem,
  16: 1rem,
  20: 1.25rem
);

@mixin H4() {
  font-size: 34px;
  line-height: 43px;
}

@mixin H5() {
  font-weight: 500;
  font-size: 22px;
  line-height: 28px;
}

@mixin H6() {
  font-weight: 500;
  font-size: 20px;
  line-height: 25px;
}

@mixin Title1() {
  font-weight: 500;
  font-size: 18px;
  line-height: 23px;
}

@mixin Title2() {
  font-weight: 500;
  font-size: 16px;
  line-height: 20px;
}

@mixin Subtitle1() {
  font-size: 14px;
  line-height: 18px;
  text-transform: uppercase;
}

@mixin Subtitle2() {
  font-weight: 500;
  font-size: 14px;
  line-height: 18px;
}

@mixin Body1() {
  font-size: 16px;
  line-height: 20px;
}

@mixin Body2() {
  font-size: 14px;
  line-height: 18px;
}

@mixin Body3() {
  font-size: 13px;
  line-height: 17px;
}

@mixin Body4() {
  font-size: 20px;
  line-height: 36px;
}

@mixin Button() {
  font-weight: 500;
  font-size: 14px;
  line-height: 18px;
}

@mixin Note() {
  font-size: 12px;
  line-height: 15px;
}

@mixin Overline() {
  font-weight: 500;
  font-size: 12px;
  line-height: 15px;
}

@mixin Small1() {
  font-size: 10px;
  line-height: 13px;
}

@mixin Small2() {
  font-weight: 500;
  font-size: 10px;
  line-height: 13px;
}

@mixin fb-mat-elevation($zValue, $color: #000) {
  @if type-of($zValue) != number or not unitless($zValue) {
    @error '$zValue must be a unitless number';
  }
  @if $zValue < 12 or $zValue > 24 {
    @error '$zValue must be between 12 and 24';
  }
  box-shadow: #{map-get(fb-get-umbra-map($color), $zValue)};
}

@function fb-get-umbra-map($color) {
  @return (
    12: '3px 0px 12px 0px #{if(type-of($color) == color, rgba($color, .06), $color)}',
    16: '2px 2px 12px 0px #{if(type-of($color) == color, rgba($color, .08), $color)}',
    18: '0px 3px 31px 0px #{if(type-of($color) == color, rgba($color, .06), $color)}',
    20: '0px -3px 31px 0px #{if(type-of($color) == color, rgba($color, .06), $color)}',
    22: '3px 4px 31px 0px #{if(type-of($color) == color, rgba($color, .08), $color)}',
    24: '3px 4px 31px 0px #{if(type-of($color) == color, rgba($color, .15), $color)}',
  );
}

@mixin fb-border-radius($value) {
  @if type-of($value) != number or not unitless($value) {
    @error '$value must be a unitless number';
  }
  @if $value < 4 or $value > 20 {
    @error '$value must be between 4 and 20';
  }
  border-radius: #{map-get($fb-border-radius-map, $value)};
}

$typography-typography: mat.define-typography-config(
  $font-family: 'Google Sans'
);
